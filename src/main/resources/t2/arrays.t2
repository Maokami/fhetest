int main(void) {
  EncInt[] enc_vec_;
  int[] arr;
  EncInt c1, c2;
  int num;
  c1 = 10;
  c2 = 11;
  num = 2;
  arr = new int[10];
  enc_vec_ = new EncInt[10];

  arr = { 1, 2 };   // ok
  arr[0] = 12;      // ok
  arr[0] += 31;     // ok
  arr[1] = (arr[0]) * 4;      // ok
  arr = { 1, num, num + 1 };  // ok
  tstart();

  // Check for any shallow copy issues
  print(c1);  // 10
  print(c2);  // 11
  c2 = c1;
  c2 = 12;
  print(c1);  // 10
  print(c2);  // 12

  enc_vec_ = { 1, 3 };  // ok
  print(enc_vec_[0]);   // 1
  print(enc_vec_[1]);   // 3

  enc_vec_ = { 1, c1 };  // ok
  print(enc_vec_[0]);   // 1
  print(enc_vec_[1]);   // 10

  enc_vec_ = { c1, 3 }; // ok
  print(enc_vec_[0]);   // 10
  print(enc_vec_[1]);   // 3

  print(c1);            // 10
  enc_vec_ = { c1, c1 + 10 }; // ok
  print(enc_vec_[0]);   // 10
  print(enc_vec_[1]);   // 20

  enc_vec_[0] = 12;     // ok
  print(c1);            // 10
  enc_vec_[0] += c1;    // ok
  print(c1);            // 10
  print(enc_vec_[0]);   // 22

  enc_vec_[1] = enc_vec_[0];  // ok
  print(enc_vec_[1]);         // 22

  enc_vec_ = enc_vec_;  // ok
  enc_vec_ = arr;       // ok
  print(enc_vec_[0]);   // 1
  print(enc_vec_[1]);   // 2

  tstop();
  return 0;
}
